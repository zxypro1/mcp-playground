# ------------------------------------
#   欢迎您使用阿里云函数计算 fc3 组件进行项目开发
#   组件仓库地址：https://github.com/devsapp/fc3
#   组件帮助文档：https://manual.serverless-devs.com/user-guide/aliyun/#fc3
#   Yaml参考文档：https://manual.serverless-devs.com/user-guide/aliyun/fc3/spec/
#   关于Serverless Devs和FC组件的关系、如何声明/部署多个函数等问题，可以参考文档：https://manual.serverless-devs.com/user-guide/tips/
#   关于如何做CICD等问题，可以参考：https://manual.serverless-devs.com/user-guide/cicd/
#   关于如何进行环境划分等问题，可以参考：https://docs.serverless-devs.com/practices/multi-env/
#   更多函数计算案例，可参考：https://github.com/devsapp/awesome/
#   有问题快来钉钉群问一下吧：33947367
# ------------------------------------
edition: 3.0.0
name: hello-world-app
# access 是当前应用所需要的密钥信息配置：
# 密钥配置可以参考：https://docs.serverless-devs.com/user-guide/builtin/config/
# 密钥使用顺序可以参考：https://docs.serverless-devs.com/dev-guide/cli_design/#_11
access: "{{ access }}"

vars: # 全局变量
  region: "{{ region }}"

resources:
  hello_world:
    # 如果只想针对 hello_world 下面的业务进行相关操作，可以在命令行中加上 hello_world，例如：
    # 只对 hello_world 进行构建：s hello_world build
    # 如果不带有 hello_world ，而是直接执行 s build，工具则会对当前Yaml下，所有和 hello_world 平级的业务模块（如有其他平级的模块，例如下面注释的next_function），按照一定顺序进行 build 操作
    component: fc3 # 组件名称，Serverless Devs 工具本身类似于一种游戏机，不具备具体的业务能力，组件类似于游戏卡，用户通过向游戏机中插入不同的游戏卡实现不同的功能，即通过使用不同的组件实现不同的具体业务能力
    # actions:       # 自定义执行逻辑，关于actions 的使用，可以参考：https://docs.serverless-devs.com/user-guide/spec/#_10
    props:
      region: ${vars.region} # 关于变量的使用方法，可以参考：https://docs.serverless-devs.com/user-guide/spec/#_3
      functionName: "start-nodejs-9syz"
      description: "hello world by serverless devs"
      runtime: "nodejs14"
      code: ./code
      handler: index.handler
      memorySize: 128
      timeout: 30

  # next_function: # 第二个函数的案例，仅供参考
  #  # 如果在当前项目下执行 s deploy，会同时部署模块
  #  # 如果想单独部署当前服务与函数，可以执行 s + 模块名/业务名 + deploy，例如：s next_function deploy
  #  # 如果想单独部署当前函数，可以执行 s + 模块名/业务名 + deploy function，例如：s next_function deploy function
  #  # 更多命令可参考：https://manual.serverless-devs.com/user-guide/aliyun/#fc3
  #   component: fc3
  #   props:
  #     region: ${vars.region}
  #     functionName: next_function_example
  #     description: 'hello world by serverless devs'
  #     runtime: "nodejs14"
  #     code: ./code
  #     handler: index.handler
  #     memorySize: 128
  #     timeout: 60
